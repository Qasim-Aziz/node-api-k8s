apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    networking/allow-internet-access: "true"
    app: jardin-back
  name: jardin-back-prod
  namespace: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jardin-back
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: jardin-back
    spec:
      containers:
      - image: anonymeio/jardin-prod:0.0.3
        name: jardin-back
        command: ["/bin/sh", "-c", "npm run init-db", "npm run init-data", "npm run migrate", "npm run serve"]
        env:
        - name: DB_USERNAME
          value: "jardin"
        - name: DB_PASSWORD
          value: "khIBjb9fBOv1e3q7"
        - name: DB_NAME
          value: "jardin_secret"
        - name: DB_HOST
          value: "localhost"
        - name: DB_PORT
          value: "5432"
        - name: APP_HOST
          value: "127.0.0.1"
        
          # - name: DB_USERNAME
          #   valueFrom:
          #     secretKeyRef:
          #       name: prod-db
          #       key: DB_USERNAME
          # - name: DB_PASSWORD
          #   valueFrom:
          #     secretKeyRef:
          #       name: prod-db
          #       key: DB_PASSWORD
          # - name: DB_NAME
          #   valueFrom:
          #     secretKeyRef:
          #       name: prod-db
          #       key: DB_NAME
          # - name: DB_HOST
          #   valueFrom:
          #     configMapKeyRef:
          #       name: prod-configmap
          #       key: DB_HOST
          # - name: DB_PORT
          #   valueFrom:
          #     configMapKeyRef:
          #       name: prod-configmap
          #       key: DB_PORT
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.17
        command:
        - "/cloud_sql_proxy"
        
        - "-instances=platinum-trees-99915:us-central1:anonyme-prod=tcp:5432"
        - "-credential_file=/secrets/service_account.json"
        ports:
          - containerPort: 5432
        securityContext:
          runAsNonRoot: true
        volumeMounts:
        - name: sa-secret
          mountPath: /secrets/
          readOnly: true    
      volumes:
      - name: sa-secret
        secret:
          secretName: sa-secret  
