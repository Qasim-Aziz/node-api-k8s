name: staging workflow

on:
  push:
    branches: [ dev-feature ]
  

jobs:
  jardin-backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: jardin_secret
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: no_pass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 15432:5432

    strategy:
      matrix:
        node-version: [12.19.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache Node Modules
      uses: actions/cache@v2
      id: cache-node-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-nodemodules-
    - name: Install dependencies
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: npm run yarn

    - name: Lint Test
      run: npm run lint

    - name: Circular Test
      run: npm run check-circular

    - name: Tests
      run: |
        npm run migrate
        npm run test::ci
      env:
        DB_HOST: 'localhost'
        LOG_LEVEL: 'error'
    