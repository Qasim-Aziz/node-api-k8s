apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    networking/allow-internet-access: "true"
    app: jardin-back-preprod
  name: jardin-back-preprod
  namespace: preprod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jardin-back-preprod
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '3000'
      labels:
        app: jardin-back-preprod
    spec:
      containers:
      - image: anonymeio/jardin-back:0.0.1
        name: jardin-back
        command: ["/bin/sh", "-c"]
        args: ["npm run init-db; npm run init-data; npm run migrate; npm run serve"]
        
        env:
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: preprod-db
                key: DB_USERNAME
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: preprod-db
                key: DB_PASSWORD
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: preprod-db
                key: DB_NAME
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                name: preprod-configmap
                key: DB_HOST
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                name: preprod-configmap
                key: DB_PORT
          # - name: APP_HOST
          #   valueFrom:
              # configMapKeyRef:
              #   name: preprod-configmap
              #   key: APP_HOST
      # - name: cloud-sql-proxy
      #   image: gcr.io/cloudsql-docker/gce-proxy:1.17
      #   command:
      #   - "/cloud_sql_proxy"
        
      #   - "-instances=platinum-trees-99915:us-central1:beta-anonyme=tcp:5432"
      #   - "-credential_file=/secrets/service_account.json"
      #   ports:
      #     - containerPort: 5432
      #   securityContext:
      #     runAsNonRoot: true
      #   volumeMounts:
      #   - name: sa-secret
      #     mountPath: /secrets/
      #     readOnly: true    
      # volumes:
      # - name: sa-secret
      #   secret:
      #     secretName: sa-secret  
