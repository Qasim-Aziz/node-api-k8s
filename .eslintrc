{
  "env": {
    "node": true,
    "mocha": true
  },
  "extends": [
    "eslint:recommended",
    "airbnb/base"
  ],
  "parser": "babel-eslint",
  "rules": {
    "camelcase": 0,
    "indent": [
      "error",
      2,
      {
        "SwitchCase": 1,
        "FunctionDeclaration": {
          "parameters": "first"
        }
      }
    ],
    "prefer-destructuring": "off",  // TODO: promote to "warn"
    "no-await-in-loop": "off", // TODO: promote to "warn"
    "no-multi-assign": "off", // TODO: promote to "warn" // TODO: promote to error except in migrations/lib.js
    "no-return-await": "error",
    "no-loop-func": "warn", // TODO: promote to "warn"
    "no-buffer-constructor": "off",
    "function-paren-newline": "off",
    "object-curly-newline": "off", // TODO: maybe, if everyone is ok, put this to "warn", but I don't think its nice...
    "no-restricted-globals": "error",
    "no-restricted-imports": ["error", {
      "patterns": ["../*", "./*"],
      "paths": [
        {
          "name": "debug",
          "message": "Please use helpers/logger instead"
        },
        {
          "name": "moment",
          "message": "Please use \"import moment from 'server/helpers/moment'\" instead"
        },
        {
          "name": "lodash",
          "message": "Please use \"import _ from 'server/helpers/lodash'\" instead"
        }
      ]
    }],
    "no-restricted-modules": ["error", {
      "paths": [
        {
          "name": "debug",
          "message": "Please use helpers/logger instead"
        },
        {
          "name": "moment",
          "message": "Please use \"import moment from 'server/helpers/moment'\" instead"
        },
        {
          "name": "lodash",
          "message": "Please use \"import _ from 'server/helpers/lodash'\" instead"
        }
      ]
    }],
    "spaced-comment": "off",
    "space-before-function-paren": [
      "error",
      {
        "anonymous": "always",
        "named": "never"
      }
    ],
    "object-curly-spacing": [
      1,
      "always"
    ],
    //TODO: discuss with everyone about turning it from 1 (warn) to 2 (error)
    "comma-dangle": [
      "error",
      {
        "arrays": "only-multiline",
        "objects": "only-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "ignore"
      }
    ],
    "class-methods-use-this": [
      "off"
    ],
    "no-bitwise": [
      "off"
    ],
    "import/extensions": [
      "error",
      {
        "ts": "never"
      }
    ],
    "import/prefer-default-export": [
      "off"
    ],
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          [
            "parent",
            "sibling"
          ],
          "index"
        ],
        "newlines-between": "ignore"
        // TODO: newlines-between should progressively go to "always" (target behavior)
      }
    ],
    "no-underscore-dangle": [
      "off"
    ],
    "no-restricted-syntax": [
      "off",
      "ForOfStatement"
    ],
    "no-use-before-define": [
      "off"
    ],
    "max-len": [
      "error",
      150
    ],
    "no-continue": [
      "off"
    ],
    "no-process-exit": [
      "error"
    ],
    "no-console": [
      "error"
    ],
    "quotes": [
      "error",
      "single",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": true
      }
    ]
  },
  "settings": {
    "import/resolver": {
      "babel-module": {}
    }
  }
}
